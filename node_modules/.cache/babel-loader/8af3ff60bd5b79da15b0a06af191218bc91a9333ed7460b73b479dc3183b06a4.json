{"ast":null,"code":"var _jsxFileName = \"/Users/uvaleks/Documents/coding/web_dev_study/mesto-react/src/components/App.js\",\n  _s = $RefreshSig$();\nimport Header from './Header';\nimport Main from './Main';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport Footer from './Footer';\nimport api from '../utils/api';\nimport { useState, useEffect } from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { CardsContext } from '../contexts/CardsContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentUser, setCurrentUser] = useState({\n    name: 'Имя',\n    about: 'Описание',\n    avatar: '#'\n  });\n  const [cards, setCards] = useState([]);\n  const [isEditProfilePopupOpen, setEditProfileOpen] = useState(false);\n  const [isAddPlacePopupOpen, setAddPlaceOpne] = useState(false);\n  const [isEditAvatarPopupOpen, setEditAvatarOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  useEffect(() => {\n    const fetchUserInfo = async () => {\n      try {\n        const userInfo = await api.getUserInfo();\n        setCurrentUser(userInfo);\n      } catch (error) {\n        console.log(\"Error fetching user data:\", error);\n      }\n    };\n    fetchUserInfo();\n  }, []);\n  useEffect(() => {\n    const fetchCards = async () => {\n      try {\n        const response = await api.getCards();\n        setCards(response);\n      } catch (error) {\n        console.log(\"Error fetching cards:\", error);\n      }\n    };\n    fetchCards();\n  }, []);\n  useEffect(() => {\n    const fetchCards = async () => {\n      try {\n        const response = await api.getCards();\n        setCards(response);\n      } catch (error) {\n        console.log(\"Error fetching cards:\", error);\n      }\n    };\n    fetchCards();\n  }, []);\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    });\n  }\n  function handleCardDelete(card) {\n    api.deleteCard(card._id).then(res => {\n      if (res.message === 'Пост удалён') {\n        const newCards = cards.filter(function (item) {\n          return item._id !== card._id;\n        });\n        setCards(newCards);\n      }\n    });\n  }\n  function handleUpdateUser({\n    name,\n    about\n  }) {\n    api.patchUserInfo({\n      name,\n      about\n    }).then(res => {\n      setCurrentUser({\n        name: res.name,\n        about: res.about,\n        avatar: res.avatar\n      });\n      closeAllPopups();\n    });\n  }\n  function handleUpdateAvatar(link) {\n    api.patchAvatar(link).then(res => {\n      setCurrentUser({\n        name: res.name,\n        about: res.about,\n        avatar: res.avatar\n      });\n      closeAllPopups();\n    });\n  }\n  function handleAddPlaceSubmit(name, link) {\n    api.postCard({\n      name,\n      link\n    }).then(newCard => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    });\n  }\n  function closeAllPopups() {\n    setEditProfileOpen(false);\n    setAddPlaceOpne(false);\n    setEditAvatarOpen(false);\n    setSelectedCard(null);\n  }\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(CardsContext.Provider, {\n      value: cards,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Main, {\n          onEditProfile: () => setEditProfileOpen(true),\n          onAddPlace: () => setAddPlaceOpne(true),\n          onEditAvatar: () => setEditAvatarOpen(true),\n          closeAllPopups: closeAllPopups,\n          cards: cards,\n          selectedCard: selectedCard,\n          onCardClick: handleCardClick,\n          onCardLike: handleCardLike,\n          onCardDelete: handleCardDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n          isOpen: isEditProfilePopupOpen,\n          onClose: closeAllPopups,\n          onUpdateUser: handleUpdateUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n          isOpen: isEditAvatarPopupOpen,\n          onClose: closeAllPopups,\n          onUpdateAvatar: handleUpdateAvatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n          isOpen: isAddPlacePopupOpen,\n          onClose: closeAllPopups,\n          onAddCard: handleAddPlaceSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"cAqETpvmwzyZq0CnC3oT1ghUOqs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Header","Main","EditProfilePopup","EditAvatarPopup","AddPlacePopup","Footer","api","useState","useEffect","CurrentUserContext","CardsContext","jsxDEV","_jsxDEV","App","_s","currentUser","setCurrentUser","name","about","avatar","cards","setCards","isEditProfilePopupOpen","setEditProfileOpen","isAddPlacePopupOpen","setAddPlaceOpne","isEditAvatarPopupOpen","setEditAvatarOpen","selectedCard","setSelectedCard","fetchUserInfo","userInfo","getUserInfo","error","console","log","fetchCards","response","getCards","handleCardLike","card","isLiked","likes","some","i","_id","changeLikeCardStatus","then","newCard","state","map","c","handleCardDelete","deleteCard","res","message","newCards","filter","item","handleUpdateUser","patchUserInfo","closeAllPopups","handleUpdateAvatar","link","patchAvatar","handleAddPlaceSubmit","postCard","handleCardClick","Provider","value","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onEditProfile","onAddPlace","onEditAvatar","onCardClick","onCardLike","onCardDelete","isOpen","onClose","onUpdateUser","onUpdateAvatar","onAddCard","_c","$RefreshReg$"],"sources":["/Users/uvaleks/Documents/coding/web_dev_study/mesto-react/src/components/App.js"],"sourcesContent":["import Header from './Header';\nimport Main from './Main';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport Footer from './Footer';\nimport api from '../utils/api';\nimport { useState, useEffect } from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { CardsContext } from '../contexts/CardsContext';\n\n\nfunction App() {\n    const [currentUser, setCurrentUser] = useState({name: 'Имя', about: 'Описание', avatar: '#'});\n    const [cards, setCards] = useState([]);\n    const [isEditProfilePopupOpen, setEditProfileOpen] = useState(false);\n    const [isAddPlacePopupOpen, setAddPlaceOpne] = useState(false);\n    const [isEditAvatarPopupOpen, setEditAvatarOpen] = useState(false);\n    const [selectedCard, setSelectedCard] = useState(null);\n\n    useEffect(() => {\n        const fetchUserInfo = async () => {\n          try {\n            const userInfo = await api.getUserInfo();\n            setCurrentUser(userInfo);\n          } catch (error) {\n            console.log(\"Error fetching user data:\", error);\n          }\n        };\n    \n        fetchUserInfo();\n    }, []);\n\n    useEffect(() => {\n      const fetchCards = async () => {\n        try {\n          const response = await api.getCards();\n          setCards(response);\n        } catch (error) {\n          console.log(\"Error fetching cards:\", error);\n        }\n      };\n  \n      fetchCards();\n    }, []);\n\n    useEffect(() => {\n        const fetchCards = async () => {\n          try {\n            const response = await api.getCards();\n            setCards(response);\n          } catch (error) {\n            console.log(\"Error fetching cards:\", error);\n          }\n        };\n    \n        fetchCards();\n      }, []);\n\n    function handleCardLike(card) {\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n        \n        api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n            setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n        });\n    }\n\n    function handleCardDelete(card) {\n        api.deleteCard(card._id).then((res) => {\n            if (res.message === 'Пост удалён') {\n                const newCards = cards.filter(function (item) {\n                    return item._id !== card._id;\n                  })\n                setCards(newCards);\n            }\n        });\n    }\n\n    function handleUpdateUser({name, about}) {\n        api.patchUserInfo({name, about}).then((res) => {\n            setCurrentUser({name: res.name, about: res.about, avatar: res.avatar});\n            closeAllPopups();\n        })\n    }\n\n    function handleUpdateAvatar(link) {\n        api.patchAvatar(link).then((res) => {\n            setCurrentUser({name: res.name, about: res.about, avatar: res.avatar});\n            closeAllPopups();\n        })\n    }\n\n    function handleAddPlaceSubmit(name, link) {\n        api.postCard({name, link}).then((newCard) => {\n            setCards([newCard, ...cards]); \n            closeAllPopups();\n        })\n    }\n \n    function closeAllPopups() {\n        setEditProfileOpen(false)\n        setAddPlaceOpne(false)\n        setEditAvatarOpen(false)\n        setSelectedCard(null)\n    }\n\n    function handleCardClick(card) {\n        setSelectedCard(card)\n    }\n\n    return (\n        <CurrentUserContext.Provider value={currentUser}>\n            <CardsContext.Provider value={cards}>\n                <div className=\"page\">\n                    <Header />\n                    <Main\n                        onEditProfile={() => setEditProfileOpen(true)}\n                        onAddPlace={() => setAddPlaceOpne(true)}\n                        onEditAvatar={() => setEditAvatarOpen(true)}\n                        closeAllPopups={closeAllPopups}\n                        cards={cards}\n                        selectedCard={selectedCard}\n                        onCardClick={handleCardClick}\n                        onCardLike={handleCardLike}\n                        onCardDelete={handleCardDelete}\n                    />\n                    <EditProfilePopup\n                        isOpen={isEditProfilePopupOpen}\n                        onClose={closeAllPopups}\n                        onUpdateUser={handleUpdateUser}\n                    />\n                    <EditAvatarPopup\n                        isOpen={isEditAvatarPopupOpen}\n                        onClose={closeAllPopups}\n                        onUpdateAvatar={handleUpdateAvatar}\n                    />\n                    <AddPlacePopup\n                        isOpen={isAddPlacePopupOpen}\n                        onClose={closeAllPopups}\n                        onAddCard={handleAddPlaceSubmit}\n                    />\n                    <Footer />\n                </div>\n            </CardsContext.Provider>\n        </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}