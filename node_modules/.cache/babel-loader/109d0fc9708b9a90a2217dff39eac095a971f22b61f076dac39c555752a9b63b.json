{"ast":null,"code":"var _jsxFileName = \"/Users/uvaleks/Documents/coding/web_dev_study/mesto-react/src/components/App.js\",\n  _s = $RefreshSig$();\nimport '../../src/index.css';\nimport Header from './Header';\nimport Main from './Main';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport Footer from './Footer';\nimport api from '../utils/api';\nimport { useState, useEffect } from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { CardsContext } from '../contexts/CardsContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentUser, setCurrentUser] = useState({\n    name: 'Имя',\n    about: 'Описание',\n    avatar: '#'\n  });\n  useEffect(() => {\n    const fetchUserInfo = async () => {\n      try {\n        const userInfo = await api.getUserInfo();\n        setCurrentUser(userInfo);\n      } catch (error) {\n        console.log(\"Error fetching user data:\", error);\n      }\n    };\n    fetchUserInfo();\n  }, []);\n  const [cards, setCards] = useState([]);\n  useEffect(() => {\n    const fetchCards = async () => {\n      try {\n        const response = await api.getCards();\n        setCards(response);\n      } catch (error) {\n        console.log(\"Error fetching cards:\", error);\n      }\n    };\n    fetchCards();\n  }, []);\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    });\n  }\n  function handleCardDelete(card) {\n    api.deleteCard(card._id).then(res => {\n      if (res.message === 'Пост удалён') {\n        const newCards = cards.filter(function (item) {\n          return item._id !== card._id;\n        });\n        setCards(newCards);\n      }\n    });\n  }\n  function handleUpdateUser({\n    name,\n    about\n  }) {\n    api.patchUserInfo({\n      name,\n      about\n    }).then(res => {\n      setCurrentUser({\n        name: res.name,\n        about: res.about,\n        avatar: res.avatar\n      });\n      closeAllPopups();\n    });\n  }\n  function handleUpdateAvatar(link) {\n    api.patchAvatar(link).then(res => {\n      setCurrentUser({\n        name: res.name,\n        about: res.about,\n        avatar: res.avatar\n      });\n      closeAllPopups();\n    });\n  }\n  const [isEditProfilePopupOpen, setEditProfileOpen] = useState(false);\n  const [isAddPlacePopupOpen, setAddPlaceOpne] = useState(false);\n  const [isEditAvatarPopupOpen, setEditAvatarOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState('');\n  function closeAllPopups() {\n    setEditProfileOpen(false);\n    setAddPlaceOpne(false);\n    setEditAvatarOpen(false);\n    setSelectedCard('');\n  }\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(CardsContext.Provider, {\n      value: cards,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Main, {\n          isAddPlacePopupOpen: isAddPlacePopupOpen,\n          isEditAvatarPopupOpen: isEditAvatarPopupOpen,\n          onEditProfile: () => setEditProfileOpen(true),\n          onAddPlace: () => setAddPlaceOpne(true),\n          onEditAvatar: () => setEditAvatarOpen(true),\n          closeAllPopups: closeAllPopups,\n          cards: c,\n          card: selectedCard,\n          onCardClick: handleCardClick,\n          onCardLike: handleCardLike,\n          onCardDelete: handleCardDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n          isOpen: isEditProfilePopupOpen,\n          onClose: closeAllPopups,\n          onUpdateUser: handleUpdateUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n          isOpen: isEditAvatarPopupOpen,\n          onClose: closeAllPopups,\n          onUpdateAvatar: handleUpdateAvatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"6Vgsd1CHKnXHsm8G8MLCdKAwT7k=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Header","Main","EditProfilePopup","EditAvatarPopup","Footer","api","useState","useEffect","CurrentUserContext","CardsContext","jsxDEV","_jsxDEV","App","_s","currentUser","setCurrentUser","name","about","avatar","fetchUserInfo","userInfo","getUserInfo","error","console","log","cards","setCards","fetchCards","response","getCards","handleCardLike","card","isLiked","likes","some","i","_id","changeLikeCardStatus","then","newCard","state","map","c","handleCardDelete","deleteCard","res","message","newCards","filter","item","handleUpdateUser","patchUserInfo","closeAllPopups","handleUpdateAvatar","link","patchAvatar","isEditProfilePopupOpen","setEditProfileOpen","isAddPlacePopupOpen","setAddPlaceOpne","isEditAvatarPopupOpen","setEditAvatarOpen","selectedCard","setSelectedCard","handleCardClick","Provider","value","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onEditProfile","onAddPlace","onEditAvatar","onCardClick","onCardLike","onCardDelete","isOpen","onClose","onUpdateUser","onUpdateAvatar","_c","$RefreshReg$"],"sources":["/Users/uvaleks/Documents/coding/web_dev_study/mesto-react/src/components/App.js"],"sourcesContent":["import '../../src/index.css';\nimport Header from './Header';\nimport Main from './Main';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport Footer from './Footer';\nimport api from '../utils/api';\nimport { useState, useEffect } from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { CardsContext } from '../contexts/CardsContext';\n\n\nfunction App() {\n    const [currentUser, setCurrentUser] = useState({name: 'Имя', about: 'Описание', avatar: '#'});\n\n    useEffect(() => {\n        const fetchUserInfo = async () => {\n          try {\n            const userInfo = await api.getUserInfo();\n            setCurrentUser(userInfo);\n          } catch (error) {\n            console.log(\"Error fetching user data:\", error);\n          }\n        };\n    \n        fetchUserInfo();\n    }, []);\n\n    const [cards, setCards] = useState([]);\n\n    useEffect(() => {\n      const fetchCards = async () => {\n        try {\n          const response = await api.getCards();\n          setCards(response);\n        } catch (error) {\n          console.log(\"Error fetching cards:\", error);\n        }\n      };\n  \n      fetchCards();\n    }, []);\n\n    function handleCardLike(card) {\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n        \n        api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n            setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n        });\n    }\n\n    function handleCardDelete(card) {\n        api.deleteCard(card._id).then((res) => {\n            if (res.message === 'Пост удалён') {\n                const newCards = cards.filter(function (item) {\n                    return item._id !== card._id;\n                  })\n                setCards(newCards);\n            }\n        });\n    }\n\n    function handleUpdateUser({name, about}) {\n        api.patchUserInfo({name, about}).then((res) => {\n            setCurrentUser({name: res.name, about: res.about, avatar: res.avatar});\n            closeAllPopups();\n        })\n    }\n\n    function handleUpdateAvatar(link) {\n        api.patchAvatar(link).then((res) => {\n            setCurrentUser({name: res.name, about: res.about, avatar: res.avatar});\n            closeAllPopups();\n        })\n    }\n\n    const [isEditProfilePopupOpen, setEditProfileOpen] = useState(false);\n    const [isAddPlacePopupOpen, setAddPlaceOpne] = useState(false);\n    const [isEditAvatarPopupOpen, setEditAvatarOpen] = useState(false);\n    const [selectedCard, setSelectedCard] = useState('');\n \n    function closeAllPopups() {\n        setEditProfileOpen(false)\n        setAddPlaceOpne(false)\n        setEditAvatarOpen(false)\n        setSelectedCard('')\n    }\n\n    function handleCardClick(card) {\n        setSelectedCard(card)\n    }\n\n    return (\n        <CurrentUserContext.Provider value={currentUser}>\n            <CardsContext.Provider value={cards}>\n                <div className=\"page\">\n                    <Header />\n                    <Main\n                        isAddPlacePopupOpen={isAddPlacePopupOpen}\n                        isEditAvatarPopupOpen={isEditAvatarPopupOpen}\n                        onEditProfile={() => setEditProfileOpen(true)}\n                        onAddPlace={() => setAddPlaceOpne(true)}\n                        onEditAvatar={() => setEditAvatarOpen(true)}\n                        closeAllPopups={closeAllPopups}\n                        cards={c}\n                        card={selectedCard}\n                        onCardClick={handleCardClick}\n                        onCardLike={handleCardLike}\n                        onCardDelete={handleCardDelete}\n                    />\n                    <EditProfilePopup\n                        isOpen={isEditProfilePopupOpen}\n                        onClose={closeAllPopups}\n                        onUpdateUser={handleUpdateUser}\n                    />\n                    <EditAvatarPopup\n                        isOpen={isEditAvatarPopupOpen}\n                        onClose={closeAllPopups}\n                        onUpdateAvatar={handleUpdateAvatar}\n                    />\n                    <Footer />\n                </div>\n            </CardsContext.Provider>\n        </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}